spring.jpa.database=MYSQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost/zupProposta?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root


spring.jpa.show-sql=true

spring.jackson.deserialization.fail-on-unknown-properties=true

spring.flyway.locations=classpath:db/migration
spring.flyway.baselineOnMigrate = true 

#server configurations
server.error.include-message=always

#actuator
management.endpoints.web.exposure.include=info,health,configprops,metrics,prometheus
management.endpoint.health.show-details=always

#oauth2
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:18080/auth/realms/nosso-cartao
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs


# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

#Propriedade adicionada para resolver log Triggering
opentracing.spring.cloud.jdbc.enabled=false
